//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Lixir.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="LixirParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface ILixirVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.lixir_parser"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLixir_parser([NotNull] LixirParser.Lixir_parserContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.code"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCode([NotNull] LixirParser.CodeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] LixirParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.type_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_literal([NotNull] LixirParser.Type_literalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInstruction([NotNull] LixirParser.InstructionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable_declaration([NotNull] LixirParser.Variable_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VARIABLE_NAME_PROP</c>
	/// labeled alternative in <see cref="LixirParser.variable_manipulation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVARIABLE_NAME_PROP([NotNull] LixirParser.VARIABLE_NAME_PROPContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VARIABLE_VALUE_PROP</c>
	/// labeled alternative in <see cref="LixirParser.variable_manipulation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVARIABLE_VALUE_PROP([NotNull] LixirParser.VARIABLE_VALUE_PROPContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VARIABLE_ADD_CHILD</c>
	/// labeled alternative in <see cref="LixirParser.variable_manipulation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVARIABLE_ADD_CHILD([NotNull] LixirParser.VARIABLE_ADD_CHILDContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VARIABLE_REMOVE_CHILD</c>
	/// labeled alternative in <see cref="LixirParser.variable_manipulation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVARIABLE_REMOVE_CHILD([NotNull] LixirParser.VARIABLE_REMOVE_CHILDContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VARIABLE_INNER_METHOD</c>
	/// labeled alternative in <see cref="LixirParser.variable_manipulation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVARIABLE_INNER_METHOD([NotNull] LixirParser.VARIABLE_INNER_METHODContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VARIABLE_ASSIGNMENT</c>
	/// labeled alternative in <see cref="LixirParser.variable_manipulation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVARIABLE_ASSIGNMENT([NotNull] LixirParser.VARIABLE_ASSIGNMENTContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.method_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethod_call([NotNull] LixirParser.Method_callContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.mathematics"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMathematics([NotNull] LixirParser.MathematicsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.conditional_instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditional_instruction([NotNull] LixirParser.Conditional_instructionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.boolean_instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolean_instruction([NotNull] LixirParser.Boolean_instructionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.boolean_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolean_operator([NotNull] LixirParser.Boolean_operatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.loop_instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoop_instruction([NotNull] LixirParser.Loop_instructionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.range_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRange_operator([NotNull] LixirParser.Range_operatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.return_instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn_instruction([NotNull] LixirParser.Return_instructionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.method"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethod([NotNull] LixirParser.MethodContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.method_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethod_variable([NotNull] LixirParser.Method_variableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.code_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCode_block([NotNull] LixirParser.Code_blockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.node_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNode_literal([NotNull] LixirParser.Node_literalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LixirParser.attribute_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttribute_literal([NotNull] LixirParser.Attribute_literalContext context);
}
